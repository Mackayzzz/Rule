[General]
# IPv6 支持
ipv6 = true
# 跳过某个域名或者IP段
skip-proxy = localhost,*.local,passenger.t3go.cn,e.crashlytics.com,captive.apple.com,seed-sequoia.siri.apple.com,sequoia.apple.com,app.yinxiang.com,injections.adguard.org,local.adguard.org,cable.auth.com,*.id.ui.direct,www.baidu.com,yunbusiness.ccb.com,wxh.wo.cn,gate.lagou.com,www.abchina.com.cn,mbank.psbc.com,ibfp.psbc.com,10.0.0.0/8,100.64.0.0/10,127.0.0.1/32,169.254.0.0/16,172.16.0.0/12,192.168.0.0/16,192.168.122.1/32,193.168.0.1/32,224.0.0.0/4,240.0.0.0/4,255.255.255.255/32,::1/128,fc00::/7,fd00::/8,fe80::/10,ff00::/8,2001::/32,2001:db8::/32,2002::/16,::ffff:0:0:0:0/1,::ffff:128:0:0:0/1
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS 服务器，如果只在中国大陆境内使用，推荐删除 1.0.0.1 和 8.8.8.8 两个 DNS
dns-server = 119.29.29.29,223.5.5.5
doh-server = https://dns.alidns.com/dns-query
doh3-server = https://223.5.5.5/dns-query,https://223.6.6.6/dns-query
# Wi-Fi 访问
allow-udp-proxy = false
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
# 网络测试 URL
proxy-test-url = http://www.gstatic.com/generate_204
test-timeout = 5
interface-mode = auto
# 指定 WiFi SSID 运行模式
## 下方写法表示一般 WiFi 和移动蜂窝网络下为自动分流模式 (rule), 名为 Stick 的 WiFi 下为直连模式，名为 Stick-5G 的 WiFi 下为代理模式
ssid-trigger = "default":rule, "cellular":rule,"Stick":DIRECT,"Stick-5G":PROXY
# 使用真实 IP
real-ip = *.lan, cable.auth.com, *.msftconnecttest.com, *.msftncsi.com, network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, stun.*, global.turn.twilio.com, global.stun.twilio.com, localhost.*.qq.com, *.logon.battlenet.com.cn, *.logon.battle.net, *.blzstatic.cn, *.cmpassport.com, id6.me, open.e.189.cn, mdn.open.wo.cn, opencloud.wostore.cn, auth.wosms.cn, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, *.cmbchina.com, *.cmbchina.com.cn, *?miwifi.com, pool.ntp.org, *.pool.ntp.org, ntp.*.com, time.*.com, ntp?.*.com, time?.*.com, time.*.gov, time.*.edu.cn, *.ntp.org.cn, time.*.apple.com, PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*
# 解析器
resource-parser = https://raw.githubusercontent.com/peng-ym/sub-store/master/backend/dist/sub-store-parser.loon.min.js


[Proxy]

[Remote Proxy]

[Proxy Group]

[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# 根据自己机场及想用的节点进行删改，如想过滤 “香港 IPLC”，请修改 FilterKey 为 “.*香港 IPLC”
SockBoom - HK = NameRegex,SockBoom, FilterKey = ".*(香港|Hong Kong|HK|hk)"
SockBoom - TW = NameRegex,SockBoom, FilterKey = ".*(台湾|Taiwan|TW|tw|台北)"
SockBoom - SG = NameRegex,SockBoom, FilterKey = ".*(新加坡|狮城|Singapore|SG|sg)"
SockBoom - JP = NameRegex,SockBoom, FilterKey = ".*(日本|Japan|JP|jp)"
SockBoom - KR = NameRegex,SockBoom, FilterKey = ".*(韩国|Korea|KR|kr)"
SockBoom - US = NameRegex,SockBoom, FilterKey = ".*(美国|United States|US|us)"

[Rule]
# 本地规则
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR

DOMAIN-KEYWORD,announce,DIRECT
DOMAIN-KEYWORD,torrent,DIRECT
DOMAIN-KEYWORD,tracker,DIRECT
DOMAIN-SUFFIX,smtp,DIRECT
URL-REGEX,(Subject|HELO|SMTP),DIRECT

DOMAIN-SUFFIX,local,DIRECT
IP-CIDR,10.0.0.0/8,DIRECT,no-resolve
IP-CIDR,17.0.0.0/8,DIRECT,no-resolve
IP-CIDR,100.64.0.0/10,DIRECT,no-resolve
IP-CIDR,127.0.0.0/8,DIRECT,no-resolve
IP-CIDR,172.16.0.0/12,DIRECT,no-resolve
IP-CIDR,192.168.0.0/16,DIRECT,no-resolve

FINAL,其他

[Rewrite]
# 重写规则

[Host]
# 可以指定以下四种模式：
# 1. 指定域名使用对应的IP地址
# 2. 将域名指向另一个域名
# 3. 指定域名请求 DNS 时使用特定的 DNS 服务器，格式如下：
## google.com = server:8.8.8.8
## *.baidu.com = server:https://example.com/dns-query
## *.testflight.apple.com = server:8.8.4.4
# 4. 指定具体的 SSID 环境下使用特定的 DNS 服务器，格式如下：
## ssid:Stick = server:system

[Script]
# 脚本
# Display commodity historical price
# > JD - api.m.jd.com
http-response ^https?://api\.m\.jd\.com/client\.action\?functionId=(wareBusiness|serverConfig|basicConfig) script-path=https://raw.githubusercontent.com/zwf234/rules/master/js/jd_price.js, requires-body=true, timeout=10, tag=jd_price.js

# > Taobao - trade-acs.m.taobao.com
http-response ^http://amdc\.m\.taobao\.com/amdc/mobileDispatch script-path=https://raw.githubusercontent.com/zwf234/rules/master/js/tb_price.js, requires-body=true, timeout=10, tag=tb_price.js
http-response ^https?://trade-acs\.m\.taobao\.com/gw/mtop\.taobao\.detail\.getdetail script-path=https://raw.githubusercontent.com/zwf234/rules/master/js/tb_price.js, requires-body=true, timeout=10, tag=tb_price.js

# Display Netflix ratings - ios.prod.ftl.netflix.com
http-request ^https?://ios\.prod\.ftl\.netflix\.com/iosui/user/.+path=%5B%22videos%22%2C%\d+%22%2C%22summary%22%5D script-path=https://raw.githubusercontent.com/yichahucha/surge/master/nf_rating.js, timeout=10, tag=nf_rating.js
http-response ^https?://ios\.prod\.ftl\.netflix\.com/iosui/user/.+path=%5B%22videos%22%2C%\d+%22%2C%22summary%22%5D script-path=https://raw.githubusercontent.com/yichahucha/surge/master/nf_rating.js, requires-body=true, timeout=10, tag=nf_rating.js

# Weibo - api.weibo.cn, mapi.weibo.com, *.uve.weibo.com
http-response ^https?://(sdk|wb)app\.uve\.weibo\.com(/interface/sdk/sdkad.php|/wbapplua/wbpullad.lua) script-path=https://raw.githubusercontent.com/yichahucha/surge/master/wb_launch.js, requires-body=true, timeout=10, tag=wb_launch.js
http-response ^https?://m?api\.weibo\.c(n|om)/2/(statuses/(unread|extend|positives/get|(friends|video)(/|_)(mix)?timeline)|stories/(video_stream|home_list)|(groups|fangle)/timeline|profile/statuses|comments/build_comments|photo/recommend_list|service/picfeed|searchall|cardlist|page|!/(photos/pic_recommend_status|live/media_homelist)|video/tiny_stream_video_list|photo/info) script-path=https://raw.githubusercontent.com/yichahucha/surge/master/wb_ad.js, requires-body=true, timeout=10, tag=wb_ad.js

[Plugin]
https://raw.githubusercontent.com/Coldvvater/Mononoke/master/Loon/Plugin/Adblock/YouTubeAds.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Amap_remove_ads.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Remove_splash_screen_ads.plugin, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/weiboad.plugin, enabled=true
https://raw.githubusercontent.com/Davin-Zhang/Rules/main/Loon/Bilibili.Plugin, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Redirect/Redirect.plugin, enabled=false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/AdvertisingLite/AdvertisingLite.plugin, enabled=false
https://raw.githubusercontent.com/Coldvvater/Mononoke/master/Loon/Plugin/Streaming/Bili_Auto_Regions.plugin, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/colorweather.plugin, enabled=true
https://raw.githubusercontent.com/Peng-YM/Loon-Gallery/master/loon-gallery.plugin, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, enabled=true
https://raw.githubusercontent.com/DualSubs/DualSubs/main/plugin/DualSubs.YouTube.plugin, enabled=true
https://raw.githubusercontent.com/app2smile/rules/master/plugin/zhihu.plugin, enabled=true
# 默认未启用 TikTok 解锁插件，如需启用请一并启用 TikTok 规则及策略组
# 详细使用说明至 https://github.com/Semporia/TikTok-Unlock/blob/master/README.md 查看
# 如想更换 TikTok 区域，直接修改下方链接中 TikTokKR 为 TikTokJP / TikTokTW / TikTokUS 即可
#https://raw.githubusercontent.com/Semporia/TikTok-Unlock/master/Loon/TikTokKR.plugin, policy=国际抖音, tag=TikTok Unlock
https://raw.githubusercontent.com/app2smile/rules/master/plugin/bilibili.plugin, tag=Bilibili Adblock, enabled=false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/zhihu/zhihu_lite.lnplugin, tag=Zhihu Adblock, enabled=false
https://raw.githubusercontent.com/GeQ1an/Rules/master/Loon/Rewrite/Rewrite.plugin, tag=Stick Rules for Rewrite, enabled=false

[MITM]
ca-p12 = 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
ca-passphrase = 9F343PLH
# 请在正式使用前将其他已信任证书的 P12 及密码填入下方，并删掉 ca-p12 和 ca-passphrase 前的井号
# 或者前往设置界面生成、安装并信任新证书
hostname = api.m.jd.com,trade-acs.m.taobao.com,ios.prod.ftl.netflix.com,api.weibo.cn,mapi.weibo.com,*.uve.weibo.com
enable = true
skip-server-cert-verify = true
#ca-p12 =
#ca-passphrase =
